<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="memberSearchBtn.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>